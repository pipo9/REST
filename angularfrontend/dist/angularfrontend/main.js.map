{"version":3,"sources":["./src/app/catalogue.service.ts","./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./src/app/products/products.component.html","./src/app/products/products.component.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogueService {\n  \n  public host:string = \"http://localhost:8090\"\n\n  constructor(private http:HttpClient) { }\n\n  public getResource(url){\n    return this.http.get(this.host+url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<nav class=\"navbar navbar-inverse\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\n    </div>\n    <ul class=\"nav navbar-nav\">\n      <li class=\"active\"><a href=\"#\">Home</a></li>\n      <li><a href=\"#\">Page 1</a></li>\n      <li><a href=\"#\">Page 2</a></li>\n      <li><a href=\"#\">Page 3</a></li>\n    </ul>\n  </div>\n</nav>\n  \n<div class=\"container\">\n  <div class=\"col-md-3\">\n    <ul class=\"list-group\" *ngIf=\"categories\">\n      <li class=\"list-group-item\" *ngFor=\"let c of categories._embedded.categories\">\n        {{c.name}}\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-md-6\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { CatalogueService } from './catalogue.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'angularfrontend';\n  public categories;\n  constructor(private catalogueService:CatalogueService){}\n   \n  ngOnInit():void{\n    this.getCategories();\n  }\n\n  private getCategories(){\n    \n    this.catalogueService.getResource(\"/categories\")\n    .subscribe(data =>{\n      this.categories=data;\n    },error =>{\n      console.log(error);\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ProductsComponent } from './products/products.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {ProductsComponent} from './products/products.component'\nconst routes: Routes = [{path : '',component:ProductsComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","<div *ngIf=\"products\">\n    <div *ngFor=\"let p of products._embedded.products\">\n        <div class=\"col-md-6\">\n            <div class=\"panel panel-default\">\n                <div class=\"panel-heading\">\n                    {{p.name}}\n                </div>\n                <div class=\"panel-body\">\n                    <table>\n                        <tr>\n                            <td>\n                                <img height=\"100\" src=\"{{this.catalogueService.host+'/photoProduct/+p.id'}}\" alt=\"\">\n                            </td>\n                        </tr>\n                    </table>\n\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport {CatalogueService} from '../catalogue.service';\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n   products;\n  constructor(private catalogueService : CatalogueService) { }\n\n  ngOnInit():void{\n    this.getProducts();\n  }\n\n  private getProducts(){\n    \n    this.catalogueService.getResource(\"/products/search/selectedProducts\")\n    .subscribe(data =>{\n      this.products=data;\n    },error =>{\n      console.log(error);\n    })\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}